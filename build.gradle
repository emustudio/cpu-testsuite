plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
}

ext {
    emulib = '11.6'
}

group 'net.emustudio'
version '1.2.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation "net.emustudio:emulib:${emulib}.+"
    implementation 'net.jcip:jcip-annotations:1.0'
    implementation 'junit:junit:4.13.2'
}

java {
    withJavadocJar()
    withSourcesJar()
}

nexusPublishing {
    repositories {
        sonatype()
    }

    // these are not strictly required. The default timeouts are set to 1 minute. But Sonatype can be really slow.
    // If you get the error "java.net.SocketTimeoutException: timeout", these lines will help.
    connectTimeout = Duration.ofMinutes(3)
    clientTimeout = Duration.ofMinutes(3)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "cpu-testsuite_${emulib}"
            from components.java
            pom {
                name = 'CPU Test Suite'
                description = 'Generic test suite for comfortable CPU unit testing'
                url = 'https://github.com/emustudio/cpu-testsuite'
                licenses {
                    license {
                        name = 'GNU General Public License, Version 3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'vbmacher'
                        name = 'Peter Jakubƒço'
                        email = 'pjakubco@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:emustudio/cpu-testsuite.git'
                    developerConnection = 'scm:git:git@github.com:emustudio/cpu-testsuite.git'
                    url = 'https://github.com/emustudio/cpu-testsuite'
                }
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }

    repositories {
        maven {
            // configure publishing to a local directory for testing
            name = "local"
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    required {
        project.gradle.taskGraph.hasTask("publish")
    }

    def signingKey = findProperty("GPG_KEY") ?: System.getenv("GPG_KEY")
    def signingPassword = findProperty("GPG_PASSWORD") ?: System.getenv("GPG_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
